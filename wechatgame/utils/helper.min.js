var config = require("config");

function httpRequest(e, n, t, o, r) {
    var i = new XMLHttpRequest;
    return i.onreadystatechange = function (e) {
        4 == i.readyState && (200 <= i.status && i.status < 400 ? t(i.responseText) : (console.error("http error:  ", i.responseText), o && o()))
    }, r = r || "GET", i.open(r, encodeURI(e)), i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), i.send(JSON.stringify(n)), i
}

var SceneManager = function () {
    var e = wx.getSystemInfoSync().model;
    this._isIPhoneX = "iPhone X" === e
};
SceneManager.prototype.autoResize = function (e, n) {
    var t = cc.director.getScene();
    if (t) {
        t.autoReleaseAssets = !0, this.designSize = cc.size(e, n);
        var o = cc.game.canvas, r = o.width / this.designSize.width, i = o.height / this.designSize.height;
        this._sceneScaleX = r, this._sceneScaleY = i;
        var a = Math.abs(1 - r) < Math.abs(1 - i);
        cc.view.setDesignResolutionSize(e, n, a ? cc.ResolutionPolicy.FIXED_HEIGHT : cc.ResolutionPolicy.FIXED_WIDTH), this.fitHeight = a, this.fitWidth = !a;
        var s = t.getComponentInChildren(cc.Canvas);
        s && (s.designResolution = this.designSize, s.fitHeight = this.fitHeight, s.fitWidth = this.fitWidth);
        this._sceneScale = a ? r / cc.view.getScaleX() : i / cc.view.getScaleY();
        if (s.alignWithScreen) s.alignWithScreen();
        console.log(r, i, o, a, this._sceneScale, cc.view.getScaleX(), cc.view.getScaleY());
    }
}, SceneManager.prototype.getSceneScale = function () {
    return this._sceneScale || 1
}, SceneManager.prototype.topOffset = function () {
    return this._isIPhoneX ? 44 : 0
}, SceneManager.prototype.showGameStart = function (t) {
    var o = this;
    t = t || {};
    this.loadAndAddPrefab("Prefabs/pnlGameStart", function (n) {
        var e = n.getComponent("gmGameStart");
        e.onInit = function (e) {
            uiManager.seekNodeWithName("btnTry", n).children.forEach(function (e) {
                e.active = !1
            }), t.onInit && t.onInit(e)
        }, e.onPlay = t.onPlay, e.onJoinGroup = function () {
        }, e.onContact = function () {
        }, e.onRank = function (e) {
            wx.postMessage({messageType: 1}), e.nodeClose.active = !0, t.onRank && t.onRank()
        }, e.onGroupRank = function () {
            wx.postMessage({messageType: 3}), t.onGroupRank && t.onGroupRank()
        }, e.onShare = function () {
            wxHelper.shareMessage(function () {
                t.onShare && t.onShare()
            })
        }, o.componentCallback(e)
    })
}, SceneManager.prototype.showGameEnd = function (t) {
    if (wxHelper._config && wxHelper._config.left_list) {
        this.loadAndAddPrefab("Prefabs/endAds", function (node) {
            node.scale = sceneManager.getSceneScale();
            var endAds = node.getComponent("endAds");
            endAds.updateWithData(wxHelper._config.left_list);
            endAds.onClose = function () {
                t && t();
            }
        });
    }

}, SceneManager.prototype.loadAndAddPrefab = function (e, i) {
    var n = cc.loader.getRes(e);
    if (n) {
        var t = cc.director.getScene().getComponentInChildren(cc.Canvas).node, o = cc.instantiate(n);
        o.getComponent(cc.BlockInputEvents) || o.addComponent(cc.BlockInputEvents);
        var r = uiManager.seekNodeWithName("nodeMask", o);
        if (r) r.getComponent(cc.Widget).target = t;
        i(o), o.parent = t
    } else wxHelper.showLoading("加载中"), cc.loader.loadRes(e, cc.Prefab, function (e, n) {
        if (wxHelper.hideLoading(), e) console.log("加载失败:", e); else {
            var t = cc.director.getScene().getComponentInChildren(cc.Canvas).node, o = cc.instantiate(n);
            o.getComponent(cc.BlockInputEvents) || o.addComponent(cc.BlockInputEvents);
            var r = uiManager.seekNodeWithName("nodeMask", o);
            if (r) r.getComponent(cc.Widget).target = t;
            i(o), o.parent = t
        }
    })
}, SceneManager.prototype.componentCallback = function (e) {
    e.onShow = function () {
        cc.director.on("onShowVedio", function () {
            wxHelper.hideBannerAd()
        }), cc.director.on("onHideVedio", function () {
            wxHelper.showBannerAd()
        }), wxHelper.showBannerAd(null, 40)
    }, e.onHide = function () {
        cc.director.off("onShowVedio"), cc.director.off("onHideVedio"), wxHelper.hideBannerAd()
    }
}, SceneManager.prototype.createClip = function (i) {
    if (wxHelper._config.ads) if (-1 !== wxHelper._adIndex) {
        var e = wxHelper._config.ads[wxHelper._adIndex];
        if (console.log("config", wxHelper._adIndex, e), e) {
            var n = [];
            e.imgurls.forEach(function (e) {
                n.push({url: e, type: "png"})
            }, this), cc.loader.load(n, function (e, n) {
                if (e) console.log("createClip====>", e); else {
                    var t = [];
                    for (var o in n.map) t.push(new cc.SpriteFrame(n.getContent(o)));
                    var r = cc.AnimationClip.createWithSpriteFrames(t, 5);
                    r.wrapMode = 3, i && i(r)
                }
            })
        }
    } else i(null)
}, SceneManager.prototype.createAnimaNode = function (t, o) {
    this.createClip(function (e) {
        if ((o = o || new cc.Node).getComponent("gmTry") || o.addComponent("gmTry"), o.getComponent(cc.Sprite) || o.addComponent(cc.Sprite), e) {
            var n = o.getComponent(cc.Animation) || o.addComponent(cc.Animation);
            n.addClip(e, "move"), n.play("move")
        }
        t && t(o)
    })
}, SceneManager.prototype.addTryBtn = function (o) {
    var r = this;
    cc.loader.loadRes("Prefabs/btnTry", cc.Prefab, function (e, n) {
        if (!e) {
            var t = cc.instantiate(n);
            t.scale = r.getSceneScale(), t.parent = cc.director.getScene().getComponentInChildren(cc.Canvas).node, r.createAnimaNode(o, t)
        }
    })
}, SceneManager.prototype.addMoreBtn = function (o) {
    if (!wxHelper._config || !wxHelper._config.left_list) return;
    console.log("wxHelper._config->", wxHelper._config);
    var r = this;
    cc.loader.loadRes("Prefabs/btnMore", cc.Prefab, function (e, n) {
        if (!e) {
            var t = cc.instantiate(n);
            t.scale = 1 * r.getSceneScale(), t.parent = cc.director.getScene()//.getComponentInChildren(cc.Canvas).node, o && o(t)
            var widget = t.getComponent(cc.Widget);
            widget.top = 350;
            wxHelper._config.isReviewing || r.showMoreBtned || (r.showMoreBtned = true, t.getComponent("gmMore").onClick());
        }
    })
}, SceneManager.prototype.showDirect = function (n) {
    !wxHelper._config.isReviewing && !wxHelper.showDirected && wxHelper._config && wxHelper._config.directAds && cc.loader.loadRes("Prefabs/startAd", cc.Prefab, function (e, n) {
        if (!e) {
            var t = cc.instantiate(n);
            t.scale = 1.2 * sceneManager.getSceneScale(),
                t.parent = cc.director.getScene();
            t.zIndex = 10;
            t.x = cc.winSize.width / 2;
            t.y = cc.winSize.height / 2;
            wxHelper.showDirected = true;
            var startAd = t.getComponent("startAd");
            startAd.updateWithData(wxHelper._config.directAds);
        }
    })
}, SceneManager.prototype.addMoreAndTry = function (e, n) {
    this.addMoreBtn(e), this.addTryBtn(n)
}, SceneManager.prototype.hideTry = function () {
    var e = uiManager.seekNodeWithName("tryBtn");
    e && e.destroy()
}, SceneManager.prototype.hideMore = function () {
    var e = uiManager.seekNodeWithName("btnMore");
    e && e.destroy()
}, SceneManager.prototype.showMoreGameList = function (parent) {
    if (!wxHelper._config || wxHelper._config.nolist) {
        wxHelper.showBannerAd();
        return;
    }
    if (!wxHelper._config || !wxHelper._config.list) return;
    var moreGameList = uiManager.seekNodeWithName("moreGameList")
    if (moreGameList) {
        moreGameList.active = true;
        return;
    }
    var self = this;
    cc.loader.loadRes("Prefabs/moreGameList", cc.Prefab, function (error, prefab) {
        if (!!error) {
            console.log("=====>", error);
            return;
        }
        var node = cc.instantiate(prefab);
        node.x = 0;
        node.parent = parent;
        node.scale = cc.winSize.width / 720;
        node.getComponent("moreGameList").updateWithData(wxHelper._config.list);
    })
}, SceneManager.prototype.hideMoreGameList = function () {
    var moreGameList = uiManager.seekNodeWithName("moreGameList")
    console.log("hideMoreGameList->", moreGameList);
    moreGameList && (moreGameList.active = false);
}, SceneManager.prototype.showLeftGameList = function (parent) {
    if (!wxHelper._config.left_list) return;
    var listGamePanel = uiManager.seekNodeWithName("listGamePanel")
    if (listGamePanel) {
        listGamePanel.active = true;
        listGamePanel.getComponent(cc.Widget).updateAlignment();
        return;
    }
    var self = this;
    cc.loader.loadRes("Prefabs/listGamePanel", cc.Prefab, function (error, prefab) {
        if (!!error) {
            console.log("=====>", error);
            return;
        }
        var node = cc.instantiate(prefab);
        node.parent = parent;
        node.scale = cc.winSize.width / 720;
        node.getComponent("gamesPanel").updateWithData(wxHelper._config.left_list);
    })
};
var Share = function () {
    var e = this;
    e._shareCount = 0, wx.onShareAppMessage(function () {
        return e.shareData()
    }), wx.showShareMenu(!0)
};
Share.prototype.shareMessage = function () {
    return this.shareMsgs || []
}, Share.prototype.shareData = function (e, n) {
    var t = this.randomMessageIndex(), o = this;
    return {
        title: this.shareMessage()[t], imageUrl: "res/share.jpg", complete: function () {
            n && o._shareCount++, e && e()
        }
    }
}, Share.prototype.randomMessageIndex = function () {
    return Math.floor(Math.random() * this.shareMessage().length)
}, Share.prototype.canShare = function () {
    return 0 < this.shareMaxCount && this._shareCount < this.shareMaxCount
}, Share.prototype.resetShareCount = function () {
    this._shareCount = 0
}, Date.prototype.format = function (e) {
    var n = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours(),
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        S: this.getMilliseconds()
    };
    for (var t in/(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))), n) new RegExp("(" + t + ")").test(e) && (e = e.replace(RegExp.$1, 1 === RegExp.$1.length ? n[t] : ("00" + n[t]).substr(("" + n[t]).length)));
    return e
};
var UIManager = {
    seekNodeWithName: function (e, n) {
        return (-1 != e.indexOf("/") ? cc.find(e, n) : (n || (n = cc.director.getScene()), n.name === e ? n : this.findChild(e, n))) || (cc.warn("没有找到指定的Node, node name ====", e), null)
    }, seekComponentWithName: function (e, n, t) {
        var o = this.seekNodeWithName(e, t);
        return o ? o.getComponent(n) : (cc.warn("没有找到指定的Component, Component Type ====", n), null)
    }, findChild: function (e, n) {
        var t = n.getChildByName(e);
        if (t) return t;
        for (var o = n.children, r = 0; r < o.length; r++) if (t = this.findChild(e, o[r])) return t;
        return null
    }, showAllChildren: function (father) {
        getChildrenName((father ? cc.find(father) : cc.director.getScene()), (father || "scene"));
        console.log("scene-->", cc.director.getScene());

        function getChildrenName(father, fatherStr) {
            var children = father.getChildren();
            var str = fatherStr;
            for (let i = 0; i < children.length; i++) {
                var str_ = str + "/" + children[i].name;
                console.log(str_);
                getChildrenName(children[i], str_);
            }
        }
    }
}, WXHelper = function () {
    var t = this;
    this.share = new Share, wx.onShow(function () {
        t.checkUpdate()
    }), wx.updateShareMenu({withShareTicket: config.withShareTicket});
    var e = wx.getSystemInfoSync(), n = e.model;
    this._isIPhoneX = "iPhone X" === n;
    this.isShowBannnerAd = config.isShowBannnerAd, this.isShowVideoAd = config.isShowVideoAd, this._videoRelifeCount = 0, this.isDevtools = "devtools" === e.platform, this._adIndex = -1, this.gameConfig = config;
};
WXHelper.prototype.getConfig = function () {
    var t = this;
    httpRequest("https://seelii.legaogame.com/" + config.configRoute + "/get_config?version=" + config.version, null, function (e) {
        var n = JSON.parse(e);
        console.log("config", n);
        t.share.shareMaxCount = n.reviveTimes, t.share.shareMsgs = n.shareMsgs, t.showActivity = !!n.showActivity && n.showActivity, t._config = n, t._initConfig = !0, t.switchGame(), t.isReviewing = n.isReviewing;
        cc.director.loadScene((n.isShowGameBox && !n.isReviewing) ? "gameBox" : config.mainPage, () => {
            window.wx && wx.showLoading && wx.hideLoading();
        });
    })
}, WXHelper.prototype.shareMessage = function (e, n) {
    console.log("分享");
    wx.shareAppMessage(this.share.shareData(e, n))
}, WXHelper.prototype.isIPhoneX = function () {
    return this._isIPhoneX
}, WXHelper.prototype.canShare = function () {
    return this.share.canShare()
}, WXHelper.prototype.shareGroup = function () {
    wx.shareAppMessage(this.share.shareData(function (e) {
        console.log("res.shareTickets---\x3e", JSON.stringify(e.shareTickets)), null != e.shareTickets && 0 < e.shareTickets.length && window.wx.postMessage({
            messageType: 3,
            MAIN_MENU_NUM: "x1",
            shareTicket: e.shareTickets[0]
        })
    }, function () {
    }))
}, WXHelper.prototype.checkUpdate = function () {
    if ("function" == typeof wx.getUpdateManager) {
        var n = wx.getUpdateManager();
        n.onCheckForUpdate(function (e) {
        }), n.onUpdateReady(function () {
            wx.showModal({
                title: "更新提示", content: "新版本已经准备好，是否重启游戏？", success: function (e) {
                    e.confirm && n.applyUpdate()
                }
            })
        }), n.onUpdateFailed(function () {
        })
    }
}, WXHelper.prototype.showBannerAd = function (style, interval, auto) {
    if (this.isShowBannnerAd && !this._showVideo && wx.createBannerAd) {
        if (auto) {
            if (this._hideBanner) {
                this._hideBanner = false;
                this.hideBannerAd();
                return;
            }
        } else {
            this._hideBanner = false;
        }
        style = style || {center: 0, bottom: 0};
        interval = interval || 30;
        this.hideBannerAd(true);
        this._bannerAd = wx.createBannerAd({adUnitId: config.bannerAdId, style: {left: 0, top: 0, width: 1}});
        var self = this;
        this._bannerAd.onError(function () {
            self.hideBannerAd();
            if (interval > 0) {
                self._bannerTimer = setTimeout(function () {
                    self.showBannerAd(style, interval);
                }, interval * 1000);
            }
        });
        var sysInfo = wx.getSystemInfoSync();
        this._bannerAd.onLoad(function () {
            if (!self._bannerAd) return;
            if (auto) {
                if (this._hideBanner) {
                    this._hideBanner = false;
                    this.hideBannerAd();
                    return;
                }
            }
            var top = style.top;
            if (top == null) top = sysInfo.windowHeight - self._bannerAd.style.realHeight + style.bottom;
            var left = style.left || 0;
            if (style.center != null) {
                left = sysInfo.windowWidth / 2 - self._bannerAd.style.realWidth / 2 + style.center;
            } else if (style.right != null) {
                left = sysInfo.windowWidth - self._bannerAd.style.realWidth - style.right;
            }
            self._bannerAd.style.top = top;
            self._bannerAd.style.left = left;
            self._bannerAd.show();
            if (interval > 0) {
                self._bannerTimer = setTimeout(function () {
                    self.showBannerAd(style, interval, true);
                }, interval * 1000);
            }
            ;
        });
        self._bannerAd.onResize(function () {
        });

        this._bannerStyle = style;
        this._interval = interval;
    }
};
WXHelper.prototype.hideBannerAd = function (auto) {
    if (this._bannerAd) this._bannerAd.destroy();
    this._bannerAd = null;
    if (this._bannerTimer != null) clearTimeout(this._bannerTimer);
    this._bannerTimer = null;
    this._hideBanner = !auto;
}, WXHelper.prototype.showVideoAd = function (e, n) {
    console.log("this.isShowVideoAd======", this.isShowVideoAd);
    if (this.isShowVideoAd && wx.createRewardedVideoAd) {
        var t = wx.createRewardedVideoAd({adUnitId: config.videoAdId, style: {left: 0, top: 0}}), o = this;
        t.load().then(function () {
            if (o._bannerAd) o.isHideBanner = true; else o.isHideBanner = false;
            t.show(), o.hideLoading(), o.hideBannerAd();
        }), t.onClose(onVideoClose), t.onError(onVideoError), this._vedioAd = t, this._videoSuccess = e, this._onCancel = n, this._showVideo = !0

    } else {
        e && e();
    }
};
var onVideoClose = function (e) {
    wxHelper._vedioAd.offClose(onVideoClose), wxHelper._vedioAd.offError(onVideoClose), wxHelper._showVideo = !1, e && e.isEnded || void 0 === e ? (console.log("正常播放结束", wxHelper._videoSuccess), wxHelper._videoSuccess && wxHelper._videoSuccess()) : wxHelper._onCancel && wxHelper._onCancel();
    if (wxHelper.isHideBanner) {
        wxHelper.showBannerAd(wxHelper._bannerStyle, wxHelper._interval);
    }
}, onVideoError = function (e) {
    wxHelper._videoSuccess && wxHelper._videoSuccess(), wxHelper._vedioAd.offClose(onVideoClose), wxHelper._vedioAd.offError(onVideoError), wxHelper._showVideo = !1
    if (wxHelper.isHideBanner) {
        wxHelper.showBannerAd(wxHelper._bannerStyle, wxHelper._interval);
    }
};
WXHelper.prototype.canShowVideo = function () {
    return 0 < this._config.adReviveTimes && this._config.adReviveTimes > this._videoRelifeCount
}, WXHelper.prototype.relifeSuccess = function () {
    this._videoRelifeCount++
}, WXHelper.prototype.resetVideoCount = function () {
    this._videoRelifeCount = 0
}, WXHelper.prototype.saveLocalData = function (e) {
    for (var n in e) wx.setStorageSync(n, e[n])
}, WXHelper.prototype.getLocalData = function (e) {
    if (e instanceof Array) {
        for (var n = {}, t = 0; t < e.length; t++) {
            var o = wx.getStorageSync(e[t]);
            "" !== o && (n[e[t]] = o)
        }
        return n
    }
    return wx.getStorageSync(e)
}, WXHelper.prototype.getUserInfo = function (n) {
    if (this._userdata) n && n(this._userdata); else {
        var t = this;
        wx.getUserInfo({
            success: function (e) {
                t._userdata = e, n && n(e)
            }
        })
    }
}, WXHelper.prototype.showToast = function (e, n, t) {
    wx.showToast({title: e, icon: n || "none", duration: t || 2e3})
}, WXHelper.prototype.vibrateLong = function () {
    wx.vibrateLong && wx.vibrateLong()
}, WXHelper.prototype.vibrateShort = function () {
    wx.vibrateShort && wx.vibrateShort()
}, WXHelper.prototype.showLoading = function (e) {
    var n = {mask: !0};
    e && (n.title = e), wx.showLoading && wx.showLoading(n)
}, WXHelper.prototype.hideLoading = function () {
    wx.hideLoading && wx.hideLoading()
}, WXHelper.prototype.playAudio = function (e, n, t) {
    var o = wx.createInnerAudioContext();
    return n || (o.onEnded(function () {
        console.log("播放结束"), o.destroy()
    }), o.onError(function () {
        console.log("播放音频失败")
    })), o.src = e, o.autoplay = !0, o.loop = n, o.volume = t, o
}, WXHelper.prototype.stopAudio = function (e) {
    e && e.stop()
}, WXHelper.prototype.showAlert = function (e, n, t, o, r) {
    wx.showModal && wx.showModal({
        title: e, content: n, showCancel: t, success: function (e) {
            e.confirm ? o && o() : e.cancel && r && r()
        }
    })
}, WXHelper.prototype.todayCount = function (e, n) {
    var t = this.getLocalData(e);
    "" !== t && (t = JSON.parse(t));
    var o = (new Date).format("yyyyMMdd");
    return t.date === o && parseInt(t.count) >= n
}, WXHelper.prototype.addTodayCount = function (e) {
    var n = (new Date).format("yyyyMMdd"), t = this.getLocalData(e);
    "" === t ? t = {count: 0} : (t = JSON.parse(t)).date === n && (t.count = 0), t.date = n;
    var o = {};
    return o[e] = JSON.stringify(t), this.saveLocalData(o), t.count++
}, WXHelper.prototype.showMoreGame = function () {
    wx.navigateToMiniProgram && wx.navigateToMiniProgram({
        appId: this._config.boxid,
        path: this._config.boxpath,
        success: function () {
            var e = {};
            e[config.appname] = "潘多拉", console.log("跳转小程序成功"), wx.aldSendEvent && wx.aldSendEvent("跳转盒子", e)
        }
    })
}, WXHelper.prototype.tryOtherGames = function (n) {
    var t = this._config.ads[this._adIndex];
    wx.navigateToMiniProgram && wx.navigateToMiniProgram({
        appId: t.appid, path: t.path, success: function () {
            console.log("跳转小程序成功"), n && n();
            var e = {};
            e[config.appname] = t.name, wx.aldSendEvent && wx.aldSendEvent("游戏导量", e)
        }, complete: function (e) {
            console.log("跳转小程序", e)
        }
    })
}, WXHelper.prototype.switchGame = function (e) {
    sceneManager.createAnimaNode(function () {
    }, e)
}, WXHelper.prototype.nextConfig = function () {
    this._adIndex++, this._adIndex > this._config.ads.length - 1 && (this._adIndex = 0)
}, WXHelper.prototype.directAd = function () {
    if (!this._config.isReviewing) {
        var n = this._config.directAds;
        wx.navigateToMiniProgram && wx.navigateToMiniProgram({
            appId: n.appid, path: n.path, success: function () {
                console.log("跳转小程序成功");
                var e = {};
                e[config.appname] = n.name, wx.aldSendEvent && wx.aldSendEvent("首页导量", e)
            }, complete: function (e) {
                console.log("跳转小程序", e)
            }
        })
    }
}, WXHelper.prototype.directAdName = function () {
    return this._config.directAds.name
}, WXHelper.prototype.showVideoOrShare = function (onsuccess, onfail, onreview) {
    if (config.isShowVideoAd) {
        wxHelper.showVideoAd(function () {
            if (onsuccess) onsuccess();
        }, function () {
            if (onfail) onfail();
        })
    } else {
        if (wxHelper._config.isReviewing) {
            if (onsuccess) onsuccess();
        } else {
            wxHelper.shareMessage(function () {
                if (onsuccess) onsuccess();
            }, function () {
                if (onfail) onfail();
            })
        }
    }
}, wx.onShow(function () {
    console.log("初始化"), window.httpRequest = window.httpRequest || httpRequest, window.wxHelper = window.wxHelper || new WXHelper, wxHelper.checkUpdate()
}), window.sceneManager = window.sceneManager || new SceneManager, window.uiManager = window.uiManager || UIManager;